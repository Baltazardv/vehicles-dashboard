import streamlit as st
import pandas as pd
import plotly.express as px

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Dashboard de Veh√≠culos", page_icon="üöó", layout="wide")

# Cargar datos
@st.cache_data
def load_data():
    return pd.read_csv('vehicles_us.csv')

car_data = load_data()

# T√≠tulo principal
st.header('üöó Dashboard de An√°lisis de Veh√≠culos Usados')

st.write("""
Esta aplicaci√≥n permite explorar datos de veh√≠culos usados a trav√©s de visualizaciones interactivas.
Utiliza los botones o casillas de verificaci√≥n para generar los gr√°ficos.
""")

# Mostrar informaci√≥n b√°sica del dataset
st.subheader('üìä Informaci√≥n del Dataset')
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("Total de Veh√≠culos", len(car_data))
with col2:
    st.metric("Precio Promedio", f"${car_data['price'].mean():,.0f}")
with col3:
    st.metric("A√±os Disponibles", f"{car_data['model_year'].min():.0f} - {car_data['model_year'].max():.0f}")

# Opci√≥n 1: Usando botones
st.subheader('üìà Visualizaciones con Botones')

col1, col2 = st.columns(2)

with col1:
    hist_button = st.button('Construir Histograma del Od√≥metro')
    if hist_button:
        st.write('**Histograma del Od√≥metro**')
        fig = px.histogram(car_data, 
                          x="odometer", 
                          title="Distribuci√≥n del Od√≥metro",
                          labels={'odometer': 'Od√≥metro (millas)', 'count': 'Frecuencia'})
        st.plotly_chart(fig, use_container_width=True)

with col2:
    scatter_button = st.button('Construir Gr√°fico de Dispersi√≥n')
    if scatter_button:
        st.write('**Precio vs Od√≥metro**')
        fig = px.scatter(car_data, 
                        x="odometer", 
                        y="price",
                        title="Relaci√≥n entre Precio y Od√≥metro",
                        labels={'odometer': 'Od√≥metro (millas)', 'price': 'Precio ($)'})
        st.plotly_chart(fig, use_container_width=True)

# Opci√≥n 2: Usando checkboxes (m√°s interactivo)
st.subheader('‚úÖ Visualizaciones con Casillas de Verificaci√≥n')

build_histogram = st.checkbox('Mostrar Histograma del Od√≥metro')
build_scatter = st.checkbox('Mostrar Gr√°fico de Dispersi√≥n Precio vs Od√≥metro')

if build_histogram:
    st.write('**Distribuci√≥n del Od√≥metro**')
    fig = px.histogram(car_data, 
                      x="odometer",
                      nbins=50,
                      title="Distribuci√≥n del Od√≥metro de Veh√≠culos",
                      labels={'odometer': 'Od√≥metro (millas)', 'count': 'N√∫mero de Veh√≠culos'})
    fig.update_layout(showlegend=False)
    st.plotly_chart(fig, use_container_width=True)

if build_scatter:
    st.write('**Relaci√≥n entre Precio y Od√≥metro**')
    fig = px.scatter(car_data, 
                    x="odometer", 
                    y="price",
                    color="condition",
                    title="Precio vs Od√≥metro por Condici√≥n del Veh√≠culo",
                    labels={'odometer': 'Od√≥metro (millas)', 'price': 'Precio ($)'})
    st.plotly_chart(fig, use_container_width=True)

# Informaci√≥n adicional
if st.checkbox('Mostrar datos en bruto'):
    st.subheader('üîç Muestra de Datos')
    st.dataframe(car_data.head(100))